# Server block for HTTP (redirects to HTTPS)
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost; # Replace localhost with your actual domain name(s)

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Server block for HTTPS (serves frontend and proxies API)
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name localhost; # Replace localhost with your actual domain name(s)

    # --- SSL Configuration (YOU MUST ADD YOUR OWN CERTIFICATES HERE) ---
    # ssl_certificate /etc/nginx/ssl/your_domain.crt;
    # ssl_certificate_key /etc/nginx/ssl/your_domain.key;
    # ssl_trusted_certificate /etc/nginx/ssl/your_domain_chain.crt; # Optional, for full chain
    # include /etc/nginx/snippets/ssl-params.conf; # Recommended for common SSL settings

    # Root location for your frontend application
    location / {
        root /usr/share/nginx/html; # Path to your built frontend files
        index index.html index.htm;
        try_files $uri $uri/ /index.html; # Essential for single-page applications (SPAs)
    }

    # Location for your API proxy
    location /api/v1.0/ {
        proxy_pass http://backend:8000/api/v1.0/; # Assuming 'backend' is your Docker service name or internal IP
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Consider adding proxy_redirect off; if you encounter issues with redirects from the backend
    }
}
